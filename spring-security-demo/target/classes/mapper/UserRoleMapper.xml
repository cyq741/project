<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.UserRoleMapper">
  <resultMap id="BaseResultMap" type="com.demo.bean.UserRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="u_id" jdbcType="INTEGER" property="uId" />
    <result column="r_id" jdbcType="INTEGER" property="rId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, u_id, r_id
  </sql>
  <select id="selectByExample" parameterType="com.demo.bean.UserRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.bean.UserRoleExample">
    delete from user_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.bean.UserRole" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into user_role (id, u_id, r_id)
    values (#{id,jdbcType=INTEGER}, #{uId,jdbcType=INTEGER}, #{rId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.bean.UserRole" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="rId != null">
        r_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="rId != null">
        #{rId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.bean.UserRoleExample" resultType="java.lang.Long">
    select count(*) from user_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    update user_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uId != null">
        u_id = #{record.uId,jdbcType=INTEGER},
      </if>
      <if test="record.rId != null">
        r_id = #{record.rId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    update user_role
    set id = #{record.id,jdbcType=INTEGER},
      u_id = #{record.uId,jdbcType=INTEGER},
      r_id = #{record.rId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.bean.UserRole" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    update user_role
    <set>
      <if test="uId != null">
        u_id = #{uId,jdbcType=INTEGER},
      </if>
      <if test="rId != null">
        r_id = #{rId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.bean.UserRole" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    update user_role
    set u_id = #{uId,jdbcType=INTEGER},
      r_id = #{rId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--以下是自定义方法  -->
  <resultMap type="com.demo.bean.UserRole" id="BaseColumnWithUserAndRole" extends="BaseResultMap">
		
		<association property="users"
			javaType="com.demo.bean.User">
			<id column="id" property="id" />
			<result column="username" property="username" />
			<result column="password" property="password" />
		</association>
		<association property="roles"
			javaType="com.demo.bean.Role">
			<id column="id" property="id" />
			<result column="role" property="role" />
		</association>
	</resultMap>
  
  <sql id="base">
		ur.id  id,
		ur.u_id u_id,
		ur.r_id r_id
	</sql>
  <sql id="userColumn">
		u.id id,
		u.username username,
		u.password password
	</sql>

	<sql id="roleColumn">
		r. id id,
		r. role role
	</sql>
  
  <select id="selectUserWithRoles" resultMap="BaseColumnWithUserAndRole">
		select
		<include refid="base" />
		,
		<include refid="userColumn" />
		,
		<include refid="roleColumn" />
		from user_role ur

		LEFT JOIN `user` u on u.id=ur.u_id

		LEFT join role r on
		r.id=ur.r_id

		where

		u_id=#{u_id}
	</select>
</mapper>